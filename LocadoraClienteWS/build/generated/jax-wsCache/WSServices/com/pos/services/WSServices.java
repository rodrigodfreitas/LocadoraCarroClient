
package com.pos.services;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.datatype.XMLGregorianCalendar;
import javax.xml.ws.Action;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.6-1b01 
 * Generated source version: 2.2
 * 
 */
@WebService(name = "WSServices", targetNamespace = "http://webservices.wsprovider.br.com/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface WSServices {


    /**
     * 
     * @param cidadeDestino
     * @param data
     * @param cidadeOrigem
     * @return
     *     returns java.util.List<com.pos.services.Voo>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "bucarVoos", targetNamespace = "http://webservices.wsprovider.br.com/", className = "com.pos.services.BucarVoos")
    @ResponseWrapper(localName = "bucarVoosResponse", targetNamespace = "http://webservices.wsprovider.br.com/", className = "com.pos.services.BucarVoosResponse")
    @Action(input = "http://webservices.wsprovider.br.com/WSServices/bucarVoosRequest", output = "http://webservices.wsprovider.br.com/WSServices/bucarVoosResponse")
    public List<Voo> bucarVoos(
        @WebParam(name = "cidadeOrigem", targetNamespace = "")
        String cidadeOrigem,
        @WebParam(name = "cidadeDestino", targetNamespace = "")
        String cidadeDestino,
        @WebParam(name = "data", targetNamespace = "")
        XMLGregorianCalendar data);

    /**
     * 
     * @param nomePassageiro
     * @param sobreNomePassageiro
     * @param voo
     * @param loginUsuario
     * @return
     *     returns java.lang.Boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "comprarPassagemIda", targetNamespace = "http://webservices.wsprovider.br.com/", className = "com.pos.services.ComprarPassagemIda")
    @ResponseWrapper(localName = "comprarPassagemIdaResponse", targetNamespace = "http://webservices.wsprovider.br.com/", className = "com.pos.services.ComprarPassagemIdaResponse")
    @Action(input = "http://webservices.wsprovider.br.com/WSServices/comprarPassagemIdaRequest", output = "http://webservices.wsprovider.br.com/WSServices/comprarPassagemIdaResponse")
    public Boolean comprarPassagemIda(
        @WebParam(name = "loginUsuario", targetNamespace = "")
        String loginUsuario,
        @WebParam(name = "voo", targetNamespace = "")
        Voo voo,
        @WebParam(name = "nomePassageiro", targetNamespace = "")
        String nomePassageiro,
        @WebParam(name = "sobreNomePassageiro", targetNamespace = "")
        String sobreNomePassageiro);

    /**
     * 
     * @param loginUsuario
     * @return
     *     returns java.util.List<com.pos.services.Passagem>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "listarPassagens", targetNamespace = "http://webservices.wsprovider.br.com/", className = "com.pos.services.ListarPassagens")
    @ResponseWrapper(localName = "listarPassagensResponse", targetNamespace = "http://webservices.wsprovider.br.com/", className = "com.pos.services.ListarPassagensResponse")
    @Action(input = "http://webservices.wsprovider.br.com/WSServices/listarPassagensRequest", output = "http://webservices.wsprovider.br.com/WSServices/listarPassagensResponse")
    public List<Passagem> listarPassagens(
        @WebParam(name = "loginUsuario", targetNamespace = "")
        String loginUsuario);

    /**
     * 
     * @param idPassagem
     * @return
     *     returns java.lang.Boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "cancelarPassagem", targetNamespace = "http://webservices.wsprovider.br.com/", className = "com.pos.services.CancelarPassagem")
    @ResponseWrapper(localName = "cancelarPassagemResponse", targetNamespace = "http://webservices.wsprovider.br.com/", className = "com.pos.services.CancelarPassagemResponse")
    @Action(input = "http://webservices.wsprovider.br.com/WSServices/cancelarPassagemRequest", output = "http://webservices.wsprovider.br.com/WSServices/cancelarPassagemResponse")
    public Boolean cancelarPassagem(
        @WebParam(name = "idPassagem", targetNamespace = "")
        Long idPassagem);

    /**
     * 
     * @param nomePassageiro
     * @param sobreNomePassageiro
     * @param vooIdaVolta
     * @param vooIda
     * @param loginUsuario
     * @return
     *     returns java.lang.Boolean
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "comprarPassagemIdaVolta", targetNamespace = "http://webservices.wsprovider.br.com/", className = "com.pos.services.ComprarPassagemIdaVolta")
    @ResponseWrapper(localName = "comprarPassagemIdaVoltaResponse", targetNamespace = "http://webservices.wsprovider.br.com/", className = "com.pos.services.ComprarPassagemIdaVoltaResponse")
    @Action(input = "http://webservices.wsprovider.br.com/WSServices/comprarPassagemIdaVoltaRequest", output = "http://webservices.wsprovider.br.com/WSServices/comprarPassagemIdaVoltaResponse")
    public Boolean comprarPassagemIdaVolta(
        @WebParam(name = "loginUsuario", targetNamespace = "")
        String loginUsuario,
        @WebParam(name = "vooIda", targetNamespace = "")
        Voo vooIda,
        @WebParam(name = "vooIdaVolta", targetNamespace = "")
        Voo vooIdaVolta,
        @WebParam(name = "nomePassageiro", targetNamespace = "")
        String nomePassageiro,
        @WebParam(name = "sobreNomePassageiro", targetNamespace = "")
        String sobreNomePassageiro);

}
